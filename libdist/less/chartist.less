@import "chartist-settings.less";

// Mixins
// =====================
.ct-chart-series-color(@color) {
	.ct-point, .ct-line, .ct-bar, .ct-slice.ct-donut {
		stroke: @color;
	}
	.ct-slice:not(.ct-donut), .ct-area {
		fill: @color;
	}
}

.ct-series(@len) when (@len > 0){
	@tmp: extract(@ct-series-names, @len);
	@color: extract(@ct-series-colors, @len);

	.ct-series(@len - 1); // recursion

	&.ct-series-@{tmp} {
		.ct-chart-series-color(@color);	 // called above mixin
	}
}


.ct-responsive-svg-container(@width: 100%; @ratio: @ct-container-ratio) {	
	display: block;
	position: relative;
	width: @width;
	&:before {
		display: block;
	    float: left;
	    content: "";
	    width: 0;
	    height: 0;
	    padding-bottom: @ratio * 100%;
	}

	&:after {
		content: "";
	    display: table;
	    clear: both;
	}

	> svg {
		display: block;
		position: absolute;
		top: 0; left: 0;
	}
}

.generate-ct-scales-names(@len) when (@len > 0) {
  	@name: extract(@ct-scales-names, @len);
    @ratio: extract(@ct-scales, @len);
  
  .generate-ct-scales-names(@len - 1); // recursion
  
  &.@{name} {
    .ct-responsive-svg-container(@ratio: @ratio);
  }
}


// Initialization

.ct-chart {

	.ct-label {
		display: block;
		width: 100%; 
		height: 100%;
		fill: @ct-text-color;
	  	color: @ct-text-color;
	  	font-size: @ct-text-size;

	  	&.ct-horizontal {
	  		text-align: @ct-horizontal-text-align;
	  	}

	  	&.ct-vertical {
	  		text-align: @ct-vertical-text-align;
	  	}

	}

	.ct-grid {
		stroke: @ct-grid-color;
  		stroke-width: @ct-grid-width;

  		& when(unit(@ct-grid-dasharray) > 0) {	// first converted to unitless then comparison
  			stroke-dasharray: @ct-grid-dasharray;
  		}
	}

	.ct-point {
	  	stroke-width: @ct-point-size;
  		stroke-linecap: @ct-point-shape;
	}

	.ct-line {
	  	fill: none;
  		stroke-width: @ct-line-width;
  		& when(unit(@ct-line-dasharray) > 0)  {
  			stroke-dasharray: @ct-line-dasharray;
  		}
	}

	.ct-area {
	  	stroke: none;
  		fill-opacity: @ct-area-opacity;
	}

	.ct-bar {
	  	fill: none;
  		stroke-width: @ct-bar-width;
	}

	.ct-slice.ct-donut {
  		fill: none;
  		stroke-width: @ct-donut-width;
	}

	//====== chart series
	& when(@ct-include-colored-series = true) {
		.ct-series {
			.ct-series(length(@ct-series-names));
		}
	}

	& when(@ct-include-alternative-responsive-containers = true) {
		.generate-ct-scales-names(length(@ct-scales-names));
	}




//===!End
}